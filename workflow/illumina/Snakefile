
import os


configfile: os.environ['SMK_CONFIG']


demux_runs_projects = {
    'run': config['runs'],
    'project': config['projects'],
    'out_to': config['out_to'],
    'run_ids': config['run_ids'],
    'rnums': config['rnums'],
    'reads_out': config['reads_out']
}
path_resolve = lambda x: os.path.abspath(os.path.expanduser(os.path.expandvars(str(x))))


rule all:
    input:
        # ~~ illumnia demultiplexing ~~
        expand("{run}", run=config['runs']),
        expand("{out_to}/{project}/{reads_out}", **demux_runs_projects),
        expand("{out_to}/Stats/Stats.json", **demux_runs_projects)
        

rule bcl2fastq:
    """
        BCL to FASTQ file converter
        bcl2fastq v2.20.0.422
        Copyright (c) 2007-2017 Illumina, Inc.
    """
    input:
        run_dir				= expand("{run}", run=config['runs']),
        binary_base_calls	= expand("{files}", files=config['bcl_files']),
        samplesheets		= expand("{run}/SampleSheet.csv", run=config['runs'])
    output:
        seq_data			= expand("{out_to}/{project}/{reads_out}", **demux_runs_projects),
        undetermined		= expand("{out_to}/Undetermined_S0_R{rnums}_001.fastq.gz", **demux_runs_projects),
        stats				= expand("{out_to}/Stats/Stats.json", **demux_runs_projects)
    params:
        out_dir				= expand("{out_to_directory}", out_to_directory=config['out_to']),
    singularity: "docker://umccr/bcl2fastq"
    threads: 24
    shell: 
        r"""
            bcl2fastq \
            --runfolder-dir {input.run_dir} \
            --min-log-level=INFO \
            -r {threads} -p {threads} -w {threads} \
            --no-lane-splitting -o {params.out_dir}
        """